# Available levels: DEBUG, INFO, WARN, ERROR, FATAL
console_log_level: INFO

# All files and folders will be included
# in the final compressed file.
include:
  - "./test"

# Where to save this backup.
# Must be a path (program creates dirs if path not exist)
destination: "./backups"

# Ignore all files that start with 1 of the paths below.
# Must be in absolute form.
# If '/path/to/ignore' is listed, any sub-folders and files
# within that directory will be ignored.
ignore:
  - '/path/to/ignore1'
  - '/path/to/ignore2'
  - '/path/to/ignore3'

old_backups:
  # How many backups should I keep (default: 5, 0 means unlimited)
  keep: 5
  # If a backup's creation date exceeds this number, it'll be deleted.
  # Set this to 0 to skip this process
  retention: 30   # Days
  # Should this program delete older backups (even if it was
  # within retention days and total files less than 'keep')
  # to save space for new backup.
  # This option always keeps the most recent backup
  # unless 'aggressive' is set to True.
  remove_old_backups_for_space: true
  # If True, delete to the last backup to make some space for new backup
  aggressive: false

arguments:
  # Compression level.
  # Higher values are slower but yield smaller size.
  # Default level is 3
  # More at: https://python-zstandard.readthedocs.io/en/latest/compressor.html#zstdcompressor
  level: 3
  # How many should the algo use.
  # More threads equals faster compression time.
  # 0 will use all threads (also the default)
  threads: 4

settings:
  # Program will attempt to write to compressed
  # file this many bytes per cycle.
  # Higher number can cause I/O bottleneck
  # If you're unsure, leave it at default 1024
  write_chunk: 1024   # bytes
  # Settings related to progress bar
  # This function is still in Beta
  progress_bar:
    # Enabling progress bar may
    # result in slower write.
    enabled: true
